from airflow import DAG
from airflow.operators.python_operator import PythonOperator
from datetime import datetime

# Define the default arguments for the DAG
default_args = {
    'owner': 'airflow',
    'start_date': datetime(2023, 12, 29),
    'retries': 1,
}

# Create a DAG instance
dag = DAG(
    'generate_text_file',
    default_args=default_args,
    schedule_interval=None,  # Set the schedule interval as needed
    catchup=False,  # Disable catching up on historical runs
    tags=['example'],
)

# Define a Python function to generate a text file
def generate_text_file():
    # Specify the path to the airflow_dags volume where you want to create the file
    file_path = '/opt/airflow/dags/generated_file.txt'

    # Define the content to write to the file
    file_content = "This is a sample text file generated by an Airflow DAG."

    try:
        # Open the file and write the content
        with open(file_path, 'w') as file:
            file.write(file_content)
        print(f"File '{file_path}' created successfully.")
    except Exception as e:
        print(f"Error creating the file: {str(e)}")

# Create a PythonOperator to execute the generate_text_file function
generate_file_task = PythonOperator(
    task_id='generate_file_task',
    python_callable=generate_text_file,
    dag=dag,
)

# Set the task dependencies
generate_file_task

if __name__ == "__main__":
    dag.cli()
